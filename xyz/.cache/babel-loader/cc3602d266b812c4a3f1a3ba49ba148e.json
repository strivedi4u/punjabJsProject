{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivang Trivedi\\\\Downloads\\\\class2-main (3)\\\\class2-main\\\\src\\\\Keeper\\\\Keeper.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport Header from '../components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Keeper = props => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  let x = 0;\n\n  const getData = note => {\n    x = 0;\n    setNotes([...notes, note]);\n  };\n\n  const deleteNote = index => {\n    setNotes(prev => {\n      const newNotes = prev.filter((note, i) => {\n        if (i === index) return false;\n        return true;\n      });\n      return newNotes;\n    });\n  };\n\n  const allNotes = notes.map((note, index) => {\n    x = x + 1;\n    return /*#__PURE__*/_jsxDEV(Note, {\n      title: note.title,\n      note: x,\n      content: note.content,\n      id: index,\n      delete: deleteNote\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Keeper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), allNotes]\n  }, void 0, true);\n};\n\n_s(Keeper, \"3oN6erhTmp9YINipb4g2o1mZBuE=\");\n\n_c = Keeper;\nexport default Keeper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keeper\");","map":{"version":3,"sources":["C:/Users/Shivang Trivedi/Downloads/class2-main (3)/class2-main/src/Keeper/Keeper.jsx"],"names":["React","useState","Note","CreateArea","Header","Keeper","props","notes","setNotes","x","getData","note","deleteNote","index","prev","newNotes","filter","i","allNotes","map","title","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;AACJ,MAAIQ,CAAC,GAAC,CAAN;;AACI,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACrBF,IAAAA,CAAC,GAAG,CAAJ;AACDD,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWI,IAAX,CAAD,CAAR;AACH,GAHD;;AAKA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1BL,IAAAA,QAAQ,CAACM,IAAI,IAAI;AACjB,YAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAY,CAACL,IAAD,EAAMM,CAAN,KAAW;AACpC,YAAGA,CAAC,KAAKJ,KAAT,EAAgB,OAAO,KAAP;AAChB,eAAO,IAAP;AACH,OAHgB,CAAjB;AAIA,aAAOE,QAAP;AACC,KANO,CAAR;AAOH,GARD;;AAUA,QAAMG,QAAQ,GAAGX,KAAK,CAACY,GAAN,CAAU,CAACR,IAAD,EAAME,KAAN,KAAc;AACrCJ,IAAAA,CAAC,GAAGA,CAAC,GAAE,CAAP;AACA,wBAAO,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,IAAI,CAACS,KAAlB;AAAyB,MAAA,IAAI,EAAEX,CAA/B;AAAkC,MAAA,OAAO,EAAEE,IAAI,CAACU,OAAhD;AAAqE,MAAA,EAAE,EAAER,KAAzE;AAAgF,MAAA,MAAM,EAAED;AAAxF,OAA8DC,KAA9D;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAHgB,CAAjB;AAII,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA,YADA,eAGI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAIH;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ,EAIKQ,QAJL;AAAA,kBADJ;AAQP,CA9BD;;GAAMb,M;;KAAAA,M;AA+BN,eAAeA,MAAf","sourcesContent":["import React, {useState} from 'react';\nimport Note from \"./Note\"\nimport CreateArea from \"./CreateArea\";\nimport Header from '../components/Header';\nconst Keeper = (props) => {\n    const [notes,setNotes] = useState([]);\nlet x=0;\n    const getData = (note) => {\n         x = 0;\n        setNotes([...notes, note]);\n    }\n\n    const deleteNote = (index) => {\n        setNotes(prev => {\n        const newNotes = prev.filter((note,i)=> {\n            if(i === index) return false;\n            return true\n        })\n        return newNotes\n        })\n    }\n\n    const allNotes = notes.map((note,index)=>{\n        x = x +1;\n        return <Note title={note.title} note={x} content={note.content} key={index} id={index} delete={deleteNote}/>\n    })\n        return (\n            <>  \n            <Header title={\"Keeper\"} />\n         \n                <CreateArea onAdd = {getData} />\n                {allNotes}\n            </>\n        );\n};\nexport default Keeper;"]},"metadata":{},"sourceType":"module"}